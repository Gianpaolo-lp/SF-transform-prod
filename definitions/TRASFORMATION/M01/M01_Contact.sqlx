config {
  type: "table",
  tags: "M01",
  dependencies:['TrafficLight']
}



SELECT	
					

  AccountId,			
  CASE WHEN AcquisitionDate = '' THEN NULL	
  ELSE CAST(AcquisitionDate AS DATE) END AS AcquisitionDate,	
  CASE
  WHEN UPPER(ACTIVEDISCOUNT) = 'TRUE' THEN '1'
  WHEN UPPER(ACTIVEDISCOUNT) = 'FALSE' THEN '0'
  END AS ACTIVEDISCOUNT,	
  CASE WHEN LENGTH(AgeRange) >= 2 AND AgeRange LIKE '%.%' THEN  CONCAT('0',SPLIT(CAST(AgeRange AS STRING),'.')[OFFSET(0)]) 
  ELSE AgeRange END  AS AgeRange,			--conformare a 02
  CASE WHEN Birthdate = '' THEN NULL	
  ELSE CAST(Birthdate AS DATE) END AS Birthdate,
  LOWER(Canceled) AS Canceled,
  Celebrity,
  lower(CelebrityFlag) as CelebrityFlag, 
  CelebrityOther,
  ClusterGroup,
  ClusterValue,  
  Country,
  CountryOfBirth,
  CreatedById,
  CASE
   WHEN CAST(CreatedDate AS STRING) LIKE '%.%' THEN CAST(SPLIT(CAST(CreatedDate AS STRING),'.')[OFFSET(0)] AS DATETIME)
   WHEN CAST(CreatedDate AS STRING) LIKE '%+%' THEN CAST(SPLIT(CAST(CreatedDate AS STRING),'+')[OFFSET(0)] AS DATETIME) END AS CreatedDate,
CASE WHEN LENGTH(CustomerStatus) >= 1 THEN 
  CONCAT('000',SPLIT(CAST(CustomerStatus AS STRING),'.')[OFFSET(0)]) 
  ELSE CustomerStatus END AS CustomerStatus, --aggiugnere 000 prima 
  CustomerLanguage,
  CASE
  WHEN UPPER(CustomerDeceased) = 'TRUE'    THEN '1'
  WHEN UPPER(CustomerDeceased) = 'FALSE'    THEN '0'
  END AS CustomerDeceased,
  CASE WHEN DateOfFirstPurchase = '' THEN NULL
  ELSE CAST(DateOfFirstPurchase AS DATE) END AS DateOfFirstPurchase,
  CASE WHEN DateOfLastPurchase = '' THEN NULL
  ELSE CAST(DateOfLastPurchase AS DATE) END AS DateOfLastPurchase,
  CASE WHEN DateOfLastVisit = '' THEN NULL
  ELSE CAST(DateOfLastVisit AS DATE) END AS DateOfLastVisit,
  LOWER(Deceased) AS Deceased,
  LOWER(Discount) AS Discount,
  CASE WHEN DISCOUNTEXPIRATIONDATE = '' THEN NULL
  ELSE CAST(DISCOUNTEXPIRATIONDATE AS TIMESTAMP) END AS DISCOUNTEXPIRATIONDATE,
  CASE WHEN DiscountPerc = '' THEN null 
  ELSE CAST(SPLIT(DiscountPerc,'.')[OFFSET(0)] AS INT) END AS DiscountPerc,--default 
  CASE WHEN DiscountPercWW = '' THEN null
  ELSE CAST(SPLIT(DiscountPercWW,'.')[OFFSET(0)] AS INT) END AS DiscountPercWW,--default 
  CASE
  WHEN UPPER(DoubleOptInConfirmation) = 'TRUE' THEN '1'
  WHEN UPPER(DoubleOptInConfirmation) = 'FALSE' THEN '0'
  END AS DoubleOptInConfirmation,
  Email,
  SPLIT(CAST(EmployeeFlag AS STRING),'.')[OFFSET(0)] as EmployeeFlag,
  Fax,
  FirstName,
  FirstNameLocal,
  FirstNameLocalExtra,
  FiscalCode,
  Name,
  Gender,
  lower(GenericCustomer) as GenericCustomer, --Lower
  GoldenRecord,
  GuestType,
  CASE
  WHEN UPPER(HighPotentialClienteling__c) = 'TRUE' THEN 1
  WHEN UPPER(HighPotentialClienteling__c) = 'FALSE' THEN 0
  END AS HighPotentialClienteling__c, --da mettere 1,0
  HomePhone,
  Id,
 /* CASE
  WHEN UPPER(IsDeleted) = 'TRUE' THEN '1'
  WHEN UPPER(IsDeleted) = 'FALSE' THEN '0'
  END AS IsDeleted,*/
lower(IsDeleted) as IsDeleted,
  CASE WHEN LastActivityDate = '' THEN NULL
  ELSE CAST(LastActivityDate AS DATE) END AS LastActivityDate,
  CASE WHEN LastConsentUpdate= '' THEN NULL
  ELSE CAST(LastConsentUpdate AS DATE) END AS LastConsentUpdate,
  LastEvent,
  LastModifiedById,
  CASE
   WHEN CAST(LastModifiedDate AS STRING) LIKE '%.%' THEN CAST(SPLIT(CAST(LastModifiedDate AS STRING),'.')[OFFSET(0)] AS DATETIME)
   WHEN CAST(LastModifiedDate AS STRING) LIKE '%+%' THEN CAST(SPLIT(CAST(LastModifiedDate AS STRING),'+')[OFFSET(0)] AS DATETIME) END AS LastModifiedDate,
  CAST(SPLIT(LastModifiedDate__c,'.')[OFFSET(0)] AS DATETIME) AS LastModifiedDate__c,
  LastName,
  LastNameLocal,
  LastNameLocalExtra,
  LastCURequestDate,
  LastCUUpdateDate,
  REPLACE(MailingCity,' 	',',') as MailingCity,
  MailingCountry,
  MailingState,
  REPLACE(MailingStreet,'\t ',',') as MailingStreet, --escape 
  MailingPostalCode,
  MarketingConsent,
  MasterRecordId,
  MobilePhone,
  Nationality,
  NationalityProvince,
  NaturalPerson, -- X vedre sul codice
  CASE WHEN UPPER(NewsletterConsent) =  'TRUE' THEN '1'
  WHEN UPPER(NewsletterConsent) = 'FALSE'    THEN '0'
  END AS NewsletterConsent , --Cambiare True con 1 etcc...
  CASE
  WHEN UPPER(OneToOneConsent) = 'TRUE'     THEN '1'
  WHEN UPPER(OneToOneConsent) = 'FALSE'    THEN '0'
  END AS OneToOneConsent,
  OtherPhone,
  OwnerId,
  PassportNumber,
  Phone,
  PIPLConsent,
  PreferredContactMethod,
  Profession,
  ProfilingConsent,
  RecordType,
  RegistrationEvent,
  RegistrationSaleAssistant_PersonId,
  RegistrationStore,
  SPLIT(CAST(RolId AS STRING),'.')[OFFSET(0)] as RolId,
  SFSource,
  Salutation,
  SapId,
  CASE WHEN SecondDedicatedStore = 'nd' then NULL
  ELSE SecondDedicatedStore END AS SecondDedicatedStore, --ostituire nd con null 
  SECONDSALEASSISTANTOFCOMP,
  Source,
  State,
  Status,
  CASE
   WHEN CAST(SystemModstamp AS STRING) LIKE '%.%' THEN CAST(SPLIT(CAST(SystemModstamp AS STRING),'.')[OFFSET(0)] AS DATETIME)
   WHEN CAST(SystemModstamp AS STRING) LIKE '%+%' THEN CAST(SPLIT(CAST(SystemModstamp AS STRING),'+')[OFFSET(0)] AS DATETIME)  END AS SystemModstamp,
  TaxIdNumber,
  Title,
  CASE
  WHEN UPPER(TopFamily) = 'TRUE'        THEN '1'
  WHEN UPPER(TopFamily) = 'FALSE'         THEN '0'
  END AS TopFamily,
  S1.Unionid,
  CASE
  WHEN UPPER(S1.UnreachableAddress) = 'TRUE'        THEN '1'
  WHEN UPPER(S1.UnreachableAddress) = 'FALSE'    THEN '0'
  END AS UnreachableAddress,
  S1.VatNumber,
  lower(S1.VIP) as VIP, --lower
  S1.WeChatSource,
  S1.WeChatStore, 

FROM ${ref('Contact_S')} S inner join ${ref('Contact_S1')} S1  USING(Id)
WHERE RecordType_DeveloperName in ('Customer','Prospect')
