config {
  type: "incremental",
  tags: "M12"
}


WITH M11_NAVIGATO_FINAL_3 AS (
    SELECT 
        * EXCEPT(SessionsID),
        FIRST_VALUE(SessionsID) OVER (PARTITION BY SessionsID ORDER BY SessionsID, CookieID, userid) AS SessionsID
    FROM ${ref('M11_NAVIGATO_FULL')}
)
,
C AS (
  SELECT *
  FROM lp-datalake-prod.181871398.addtocart_export
--   UNION ALL
--   SELECT *
--   FROM lp-datalake-dev.test_eu.TEST_M12_CART_202212
),

C_1 AS ( 
    SELECT DISTINCT
    -- IL CONCAT RESTITUISCE NULLO SE UNO DEGLI ARGOMENTI è NULLO, PERCIO' SI CONVERTE IL NULL IN STRINGA VUOTA
        CONCAT(COALESCE(CAST(a.SessionsID AS STRING),''),'_', COALESCE(CAST(a.CookieID AS STRING),''),'_', COALESCE(a.ProductSku,'')) AS AbandonedCartKey__c,
        a.SessionsID AS SessionsID__c,
        a.CookieID AS CookieID__c,
        MAX(a.EventAction) AS EventAction__c,
        SPLIT(a.ProductSku, '_')[OFFSET(0)] AS Product__r_LoroPianaCode__c,
        REPLACE(a.ProductSku, '_', '-') AS ProductColorCode__c_RecordID__c,
        MAX(Rank) AS Rank__c,
        a.UserID AS UserID__c,
        a.UserID AS Guest__r_SapId__c,
        CAST(CONCAT(SUBSTR(MAX(a.DATE),0,4),'-',SUBSTR(MAX(a.DATE),5,2),'-',SUBSTR(MAX(a.DATE),7,2),'T00:00:00') AS TIMESTAMP) AS EventDate__c,
        MAX(ProductName) AS ProductName__c,
        CASE 
            WHEN ARTICOLO_COD IS NULL THEN 'FALSE'
            ELSE 'TRUE'
            END AS ItemPurchased__c,
        MAX(a.HostName) AS Hostname__c,
        MAX(NavigationLanguage) AS NavigationLanguage__c,
        MAX(BrowserLanguage)	AS BrowserLanguage__c,
        MAX(CountrySession) AS CountryDescription__c,
        CAST(MIN(EMISSIONE_DTA) AS TIMESTAMP) AS TransactionDate__c,
    FROM C a 
        LEFT JOIN M11_NAVIGATO_FINAL_3 b 
            ON (a.SessionsID = b.SessionsID AND CAST(a.CookieID AS STRING) = b.CookieID)
        LEFT JOIN ${ref('sal_transazioni')} c 
            ON SPLIT(a.ProductSku, '_')[OFFSET(0)] = c.ARTICOLO_COD AND b.ROL_ID = c.CLIE_DWH_COD 
    AND (CAST(CONCAT(SUBSTR(a.DATE,0,4),'-',SUBSTR(a.DATE,5,2),'-',SUBSTR(a.DATE,7,2)) AS DATE)) >= c.EMISSIONE_DTA 
    AND (CAST(CONCAT(SUBSTR(a.DATE,0,4),'-',SUBSTR(a.DATE,5,2),'-',SUBSTR(a.DATE,7,2)) AS DATE))IS NOT NULL
    WHERE  CAST(CONCAT(SUBSTR(a.DATE,0,4),'-',SUBSTR(a.DATE,5,2),'-',SUBSTR(a.DATE,7,2)) AS DATE) >= CURRENT_DATE()-7 
    GROUP BY 1,2,3,5,6,8,9
    , ARTICOLO_COD
)--,
-- C_2 AS (
    SELECT 
        a.*,
        b.date
    FROM C_1 a
    LEFT JOIN (SELECT DISTINCT CAST(CONCAT(SUBSTR(DATE,0,4),'-',SUBSTR(DATE,5,2),'-',SUBSTR(DATE,7,2)) AS DATE) AS DATE,
         CONCAT(COALESCE(CAST(SessionsID AS STRING),''),'_', COALESCE(CAST(CookieID AS STRING),''),'_', COALESCE(ProductSku,'')) AS AbandonedCartKey__c,   FROM C) b
    on a.AbandonedCartKey__c = b.AbandonedCartKey__c where UserID__c IS NOT NULL
-- ),
-- ContactAbandonedCart__c_to_add AS (
--     /* dobbiamo buttare via i record con mese (della data) < mese di oggi -1 */
--     SELECT 
--         *
--     FROM C_2
--     WHERE EXTRACT(MONTH FROM DATE) >= 
--         /* se mese = gennaio prendo dicembre, altrimenti prendo mese-1 */
--         IF(EXTRACT(MONTH FROM DATE)=1, 12, EXTRACT(MONTH FROM DATE)-1)
--         /* carico solamente user_id <> nullo, user_id non nullo se il cliente si è loggato, nullo altrimenti */
--         AND UserID__c IS NOT NULL
-- )
-- /* storicizzazione */ 
-- SELECT * FROM ContactAbandonedCart__c_to_add
-- UNION DISTINCT 
-- SELECT * FROM lp-datalake-dev.test_eu.ContactAbandonedCart__c
